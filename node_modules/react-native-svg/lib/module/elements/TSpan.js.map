{"version":3,"sources":["TSpan.tsx"],"names":["React","extractProps","propsAndStyles","extractTransform","extractText","setTSpan","pickNotNil","Shape","RNSVGTSpan","TSpan","setNativeProps","props","matrix","prop","root","x","y","ref","refMethod","displayName"],"mappings":"g0CAAA,MAAOA,CAAAA,KAAP,KAAiC,OAAjC,CACA,MAAOC,CAAAA,YAAP,EAAuBC,cAAvB,KAA6C,6BAA7C,CACA,MAAOC,CAAAA,gBAAP,KAA6B,iCAA7B,CACA,MAAOC,CAAAA,WAAP,EAAsBC,QAAtB,KAAsC,4BAAtC,CACA,OAASC,UAAT,KAA2B,aAA3B,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CAEA,OAASC,UAAT,KAA2B,oBAA3B,C,GAEqBC,CAAAA,K,sWAGnBC,c,CAAiB,SACfC,KADe,CAKZ,CACH,GAAMC,CAAAA,MAAM,CAAG,CAACD,KAAK,CAACC,MAAP,EAAiBT,gBAAgB,CAACQ,KAAD,CAAhD,CACA,GAAIC,MAAJ,CAAY,CACVD,KAAK,CAACC,MAAN,CAAeA,MAAf,CACD,CACD,GAAMC,CAAAA,IAAI,CAAGX,cAAc,CAACS,KAAD,CAA3B,CACA,SAAcE,IAAd,CAAoBP,UAAU,CAACF,WAAW,CAACS,IAAD,CAAO,KAAP,CAAZ,CAA9B,EACA,MAAKC,IAAL,EAAa,MAAKA,IAAL,CAAUJ,cAAV,CAAyBG,IAAzB,CAAb,CACD,C,wEAEQ,CACP,GAAMA,CAAAA,IAAI,CAAGX,cAAc,CAAC,KAAKS,KAAN,CAA3B,CACA,GAAMA,CAAAA,KAAK,CAAGV,YAAY,kBAEnBY,IAFmB,EAGtBE,CAAC,CAAE,IAHmB,CAItBC,CAAC,CAAE,IAJmB,GAMxB,IANwB,CAA1B,CAQA,SAAcL,KAAd,CAAqBP,WAAW,CAACS,IAAD,CAAO,KAAP,CAAhC,EACAF,KAAK,CAACM,GAAN,CAAY,KAAKC,SAAjB,CACA,MAAO,qBAAC,UAAD,aAAgBP,KAAhB,mDAAP,CACD,C,mBA/BgCJ,K,EAAdE,K,CACZU,W,CAAc,O,QADFV,K,aAkCrBJ,QAAQ,CAACI,KAAD,CAAR","sourcesContent":["import React, { Component } from 'react';\nimport extractProps, { propsAndStyles } from '../lib/extract/extractProps';\nimport extractTransform from '../lib/extract/extractTransform';\nimport extractText, { setTSpan } from '../lib/extract/extractText';\nimport { pickNotNil } from '../lib/util';\nimport Shape from './Shape';\nimport { TransformProps } from '../lib/extract/types';\nimport { RNSVGTSpan } from './NativeComponents';\n\nexport default class TSpan extends Shape<{}> {\n  static displayName = 'TSpan';\n\n  setNativeProps = (\n    props: Object & {\n      matrix?: number[];\n      style?: [] | {};\n    } & TransformProps,\n  ) => {\n    const matrix = !props.matrix && extractTransform(props);\n    if (matrix) {\n      props.matrix = matrix;\n    }\n    const prop = propsAndStyles(props);\n    Object.assign(prop, pickNotNil(extractText(prop, false)));\n    this.root && this.root.setNativeProps(prop);\n  };\n\n  render() {\n    const prop = propsAndStyles(this.props);\n    const props = extractProps(\n      {\n        ...prop,\n        x: null,\n        y: null,\n      },\n      this,\n    );\n    Object.assign(props, extractText(prop, false));\n    props.ref = this.refMethod as (instance: Component | null) => void;\n    return <RNSVGTSpan {...props} />;\n  }\n}\n\nsetTSpan(TSpan);\n"]}