{"version":3,"sources":["G.tsx"],"names":["G","setNativeProps","props","matrix","root","prop","extractedProps","font","hasProps","refMethod","children","Shape","displayName","obj","_"],"mappings":"kyBAAA,oDACA,kFACA,uDACA,yFAEA,uDACA,oD,wFAEqBA,CAAAA,C,0YAGnBC,c,CAAiB,SACfC,KADe,CAIZ,CACH,GAAMC,CAAAA,MAAM,CAAG,CAACD,KAAK,CAACC,MAAP,EAAiB,8BAAiBD,KAAjB,CAAhC,CACA,GAAIC,MAAJ,CAAY,CACVD,KAAK,CAACC,MAAN,CAAeA,MAAf,CACD,CACD,MAAKC,IAAL,EAAa,MAAKA,IAAL,CAAUH,cAAV,CAAyBC,KAAzB,CAAb,CACD,C,iFAEQ,IACCA,CAAAA,KADD,CACW,IADX,CACCA,KADD,CAEP,GAAMG,CAAAA,IAAI,CAAG,iCAAeH,KAAf,CAAb,CACA,GAAMI,CAAAA,cAAc,CAAG,0BAAaD,IAAb,CAAmB,IAAnB,CAAvB,CACA,GAAME,CAAAA,IAAI,CAAG,6BAAYF,IAAZ,CAAb,CACA,GAAIG,QAAQ,CAACD,IAAD,CAAZ,CAAoB,CAClBD,cAAc,CAACC,IAAf,CAAsBA,IAAtB,CACD,CACD,MACE,8BAAC,4BAAD,wBAAY,GAAG,CAAE,KAAKE,SAAtB,EAAqCH,cAArC,mDACGJ,KAAK,CAACQ,QADT,CADF,CAKD,C,eA5B+BC,e,oBAAbX,C,CACZY,W,CAAc,G,CA8BvB,GAAMJ,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACK,GAAD,CAAa,CAC5B,IAAK,GAAIC,CAAAA,CAAT,GAAcD,CAAAA,GAAd,CAAmB,CACjB,MAAO,KAAP,CACD,CACD,MAAO,MAAP,CACD,CALD","sourcesContent":["import React from 'react';\nimport extractProps, { propsAndStyles } from '../lib/extract/extractProps';\nimport { extractFont } from '../lib/extract/extractText';\nimport extractTransform from '../lib/extract/extractTransform';\nimport { TransformProps } from '../lib/extract/types';\nimport Shape from './Shape';\nimport { RNSVGGroup } from './NativeComponents';\n\nexport default class G<P> extends Shape<P> {\n  static displayName = 'G';\n\n  setNativeProps = (\n    props: Object & {\n      matrix?: number[];\n    } & TransformProps,\n  ) => {\n    const matrix = !props.matrix && extractTransform(props);\n    if (matrix) {\n      props.matrix = matrix;\n    }\n    this.root && this.root.setNativeProps(props);\n  };\n\n  render() {\n    const { props } = this;\n    const prop = propsAndStyles(props);\n    const extractedProps = extractProps(prop, this);\n    const font = extractFont(prop);\n    if (hasProps(font)) {\n      extractedProps.font = font;\n    }\n    return (\n      <RNSVGGroup ref={this.refMethod} {...extractedProps}>\n        {props.children}\n      </RNSVGGroup>\n    );\n  }\n}\n\nconst hasProps = (obj: {}) => {\n  for (let _ in obj) {\n    return true;\n  }\n  return false;\n};\n"]}