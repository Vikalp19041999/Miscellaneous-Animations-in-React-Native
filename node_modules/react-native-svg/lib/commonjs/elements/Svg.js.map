{"version":3,"sources":["Svg.tsx"],"names":["RNSVGSvgViewManager","NativeModules","styles","StyleSheet","create","svg","backgroundColor","borderWidth","defaultStyle","Svg","measureInWindow","callback","root","measure","measureLayout","relativeToNativeNode","onSuccess","onFail","setNativeProps","props","width","height","bbWidth","bbHeight","toDataURL","options","handle","style","opacity","viewBox","children","onLayout","preserveAspectRatio","extracted","stylesAndProps","Array","isArray","Object","assign","color","focusable","font","transform","fill","fillOpacity","fillRule","stroke","strokeWidth","strokeOpacity","strokeDasharray","strokeDashoffset","strokeLinecap","strokeLinejoin","strokeMiterlimit","Boolean","rootStyles","push","override","overrideStyles","o","NaN","isNaN","w","parseInt","h","doNotParseWidth","length","doNotParseHeight","flex","tint","tintColor","refMethod","Shape","displayName","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  findNodeHandle,\n  MeasureInWindowOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureOnSuccessCallback,\n  NativeModules,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\nimport {\n  ClipProps,\n  Color,\n  extractedProps,\n  FillProps,\n  NumberProp,\n  ResponderInstanceProps,\n  ResponderProps,\n  StrokeProps,\n  TransformProps,\n} from '../lib/extract/types';\nimport extractResponder from '../lib/extract/extractResponder';\nimport extractViewBox from '../lib/extract/extractViewBox';\nimport extractColor from '../lib/extract/extractColor';\nimport Shape from './Shape';\nimport G from './G';\nimport { RNSVGSvg } from './NativeComponents';\n\nconst RNSVGSvgViewManager = NativeModules.RNSVGSvgViewManager;\n\nconst styles = StyleSheet.create({\n  svg: {\n    backgroundColor: 'transparent',\n    borderWidth: 0,\n  },\n});\nconst defaultStyle = styles.svg;\n\nexport default class Svg extends Shape<\n  {\n    color?: Color;\n    viewBox?: string;\n    opacity?: NumberProp;\n    onLayout?: () => void;\n    preserveAspectRatio?: string;\n    style?: ViewStyle[] | ViewStyle;\n  } & TransformProps &\n    ResponderProps &\n    StrokeProps &\n    FillProps &\n    ClipProps\n> {\n  static displayName = 'Svg';\n\n  static defaultProps = {\n    width: '100%',\n    height: '100%',\n    preserveAspectRatio: 'xMidYMid meet',\n  };\n\n  measureInWindow = (callback: MeasureInWindowOnSuccessCallback) => {\n    const { root } = this;\n    root && root.measureInWindow(callback);\n  };\n\n  measure = (callback: MeasureOnSuccessCallback) => {\n    const { root } = this;\n    root && root.measure(callback);\n  };\n\n  measureLayout = (\n    relativeToNativeNode: number,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n    onFail: () => void /* currently unused */,\n  ) => {\n    const { root } = this;\n    root && root.measureLayout(relativeToNativeNode, onSuccess, onFail);\n  };\n\n  setNativeProps = (\n    props: Object & {\n      width?: NumberProp;\n      height?: NumberProp;\n      bbWidth?: NumberProp;\n      bbHeight?: NumberProp;\n    },\n  ) => {\n    const { width, height } = props;\n    if (width) {\n      props.bbWidth = width;\n    }\n    if (height) {\n      props.bbHeight = height;\n    }\n    const { root } = this;\n    root && root.setNativeProps(props);\n  };\n\n  toDataURL = (callback: () => void, options?: Object) => {\n    if (!callback) {\n      return;\n    }\n    const handle = findNodeHandle(this.root as Component);\n    RNSVGSvgViewManager.toDataURL(handle, options, callback);\n  };\n\n  render() {\n    const {\n      style,\n      opacity,\n      viewBox,\n      children,\n      onLayout,\n      preserveAspectRatio,\n      ...extracted\n    } = this.props;\n    const stylesAndProps = {\n      ...(Array.isArray(style) ? Object.assign({}, ...style) : style),\n      ...extracted,\n    };\n    const {\n      color,\n      width,\n      height,\n      focusable,\n\n      // Inherited G properties\n      font,\n      transform,\n      fill,\n      fillOpacity,\n      fillRule,\n      stroke,\n      strokeWidth,\n      strokeOpacity,\n      strokeDasharray,\n      strokeDashoffset,\n      strokeLinecap,\n      strokeLinejoin,\n      strokeMiterlimit,\n    } = stylesAndProps;\n\n    const props: extractedProps = extracted as extractedProps;\n    props.focusable = Boolean(focusable) && focusable !== 'false';\n    const rootStyles: (ViewStyle | ViewStyle[])[] = [defaultStyle];\n\n    if (style) {\n      rootStyles.push(style);\n    }\n\n    let override = false;\n    const overrideStyles: ViewStyle = {};\n    const o = opacity != null ? +opacity : NaN;\n    if (!isNaN(o)) {\n      override = true;\n      overrideStyles.opacity = o;\n    }\n\n    if (width && height) {\n      override = true;\n      const w = parseInt(width, 10);\n      const h = parseInt(height, 10);\n      const doNotParseWidth = isNaN(w) || width[width.length - 1] === '%';\n      const doNotParseHeight = isNaN(h) || height[height.length - 1] === '%';\n      overrideStyles.width = doNotParseWidth ? width : w;\n      overrideStyles.height = doNotParseHeight ? height : h;\n      overrideStyles.flex = 0;\n    }\n\n    if (override) {\n      rootStyles.push(overrideStyles);\n    }\n\n    props.style = rootStyles.length > 1 ? rootStyles : defaultStyle;\n\n    if (width != null) {\n      props.bbWidth = width;\n    }\n    if (height != null) {\n      props.bbHeight = height;\n    }\n\n    extractResponder(props, props, this as ResponderInstanceProps);\n\n    const tint = extractColor(color);\n    if (tint != null) {\n      props.color = tint;\n      props.tintColor = tint;\n    }\n\n    if (onLayout != null) {\n      props.onLayout = onLayout;\n    }\n\n    return (\n      <RNSVGSvg\n        {...props}\n        ref={this.refMethod}\n        {...extractViewBox({ viewBox, preserveAspectRatio })}\n      >\n        <G\n          {...{\n            children,\n            style,\n            font,\n            transform,\n            fill,\n            fillOpacity,\n            fillRule,\n            stroke,\n            strokeWidth,\n            strokeOpacity,\n            strokeDasharray,\n            strokeDashoffset,\n            strokeLinecap,\n            strokeLinejoin,\n            strokeMiterlimit,\n          }}\n        />\n      </RNSVGSvg>\n    );\n  }\n}\n"]}